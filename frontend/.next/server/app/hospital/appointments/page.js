(()=>{var t={};t.id=266,t.ids=[266],t.modules={2934:t=>{"use strict";t.exports=require("next/dist/client/components/action-async-storage.external.js")},4580:t=>{"use strict";t.exports=require("next/dist/client/components/request-async-storage.external.js")},5869:t=>{"use strict";t.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},399:t=>{"use strict";t.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},7133:(t,e,o)=>{"use strict";o.r(e),o.d(e,{GlobalError:()=>n.a,__next_app__:()=>c,originalPathname:()=>h,pages:()=>p,routeModule:()=>m,tree:()=>l}),o(4872),o(5495),o(5866);var a=o(3191),r=o(8716),s=o(7922),n=o.n(s),i=o(5231),d={};for(let t in i)0>["default","tree","pages","GlobalError","originalPathname","__next_app__","routeModule"].indexOf(t)&&(d[t]=()=>i[t]);o.d(e,d);let l=["",{children:["hospital",{children:["appointments",{children:["__PAGE__",{},{page:[()=>Promise.resolve().then(o.bind(o,4872)),"/workspace/frontend/src/app/hospital/appointments/page.tsx"]}]},{}]},{}]},{layout:[()=>Promise.resolve().then(o.bind(o,5495)),"/workspace/frontend/src/app/layout.tsx"],"not-found":[()=>Promise.resolve().then(o.t.bind(o,5866,23)),"next/dist/client/components/not-found-error"]}],p=["/workspace/frontend/src/app/hospital/appointments/page.tsx"],h="/hospital/appointments/page",c={require:o,loadChunk:()=>Promise.resolve()},m=new a.AppPageRouteModule({definition:{kind:r.x.APP_PAGE,page:"/hospital/appointments/page",pathname:"/hospital/appointments",bundlePath:"",filename:"",appPaths:[]},userland:{loaderTree:l}})},3021:(t,e,o)=>{Promise.resolve().then(o.t.bind(o,2994,23)),Promise.resolve().then(o.t.bind(o,6114,23)),Promise.resolve().then(o.t.bind(o,9727,23)),Promise.resolve().then(o.t.bind(o,9671,23)),Promise.resolve().then(o.t.bind(o,1868,23)),Promise.resolve().then(o.t.bind(o,4759,23))},1807:(t,e,o)=>{Promise.resolve().then(o.bind(o,2507))},8422:(t,e,o)=>{Promise.resolve().then(o.bind(o,6921))},6921:(t,e,o)=>{"use strict";o.r(e),o.d(e,{default:()=>s});var a=o(326),r=o(8838);function s(){let{data:t}=(0,r.ZP)("hospital-appts",()=>e("/appointments/hospital"));async function e(t){let e=document.cookie.split("token=")[1]?.split(";")[0];return(await fetch(`${process.env.NEXT_PUBLIC_API_URL||"http://localhost:5000/api"}${t}`,{headers:{Authorization:`Bearer ${e}`}})).json()}return(0,a.jsxs)("div",{className:"card p-6",children:[a.jsx("h1",{className:"text-xl font-semibold text-navy",children:"Hospital Appointments"}),a.jsx("div",{className:"mt-4 divide-y",children:t?.data?.appointments?.map(t=>a.jsx("div",{className:"py-3 flex items-center justify-between",children:a.jsxs("div",{children:[a.jsx("div",{className:"font-medium",children:t.patient?.name}),a.jsxs("div",{className:"text-sm text-slate-600",children:[new Date(t.appointmentDate).toLocaleDateString()," ",t.appointmentTime," â€” ",t.status]})]})},t._id))})]})}},2507:(t,e,o)=>{"use strict";o.d(e,{default:()=>l});var a=o(326),r=o(4690),s=o(7577),n=o(8069);let i=(0,s.createContext)(void 0);function d({children:t}){let[e,o]=(0,s.useState)([]),r=async()=>{try{let t=await n.hi.notifications.list();o(t?.data?.notifications||[])}catch{}};return a.jsx(i.Provider,{value:{notifications:e,refresh:r},children:t})}function l({children:t}){return a.jsx(r.H,{children:a.jsx(d,{children:t})})}},4690:(t,e,o)=>{"use strict";o.d(e,{H:()=>l,a:()=>p});var a=o(326),r=o(7577),s=o(6562),n=o(8201),i=o(8069);let d=(0,r.createContext)(void 0);function l({children:t}){let[e,o]=(0,r.useState)(s.Z.get("token")||null),[l,p]=(0,r.useState)(null),h=(0,r.useCallback)(t=>{try{let e=(0,n.o)(t);return{id:e.id,role:e.role}}catch{return null}},[]),c=(0,r.useCallback)(async(t,e)=>{let a=await i.hi.login({email:t,password:e}),r=a.token||a.data?.token;if(!r)throw Error("No token returned from server");o(r),await u()},[]),m=(0,r.useCallback)(()=>{o(null),p(null),s.Z.remove("token")},[]),u=(0,r.useCallback)(async()=>{if(e)try{let t=await i.hi.me(),o=t?.data?.user||t?.user||t?.data;p(t=>({...t||h(e)||{id:"",role:"patient"},...o}))}catch{}},[e,h]),y=(0,r.useMemo)(()=>({user:l,token:e,isAuthenticated:!!e,login:c,logout:m,refreshProfile:u}),[l,e,c,m,u]);return a.jsx(d.Provider,{value:y,children:t})}function p(){let t=(0,r.useContext)(d);if(!t)throw Error("useAuth must be used within AuthProvider");return t}},8069:(t,e,o)=>{"use strict";o.d(e,{hi:()=>n});var a=o(6562);let r=process.env.NEXT_PUBLIC_API_URL||"http://localhost:5000/api";async function s(t,e={}){let o=a.Z.get("token"),s={"Content-Type":"application/json"};e.headers&&Object.assign(s,e.headers),!1!==e.auth&&o&&(s.Authorization=`Bearer ${o}`);let n=await fetch(`${r}${t}`,{...e,headers:s,cache:"no-store"});if(!n.ok)throw Error(await n.text()||`Request failed: ${n.status}`);try{return await n.json()}catch{return{}}}let n={register:t=>s("/auth/register",{method:"POST",body:JSON.stringify(t),auth:!1}),login:t=>s("/auth/login",{method:"POST",body:JSON.stringify(t),auth:!1}),verifyOtp:t=>s("/auth/verify-otp",{method:"POST",body:JSON.stringify(t),auth:!1}),resendOtp:t=>s("/auth/resend-otp",{method:"POST",body:JSON.stringify(t),auth:!1}),forgotPassword:t=>s("/auth/forgot-password",{method:"POST",body:JSON.stringify(t),auth:!1}),resetPassword:t=>s("/auth/reset-password",{method:"POST",body:JSON.stringify(t),auth:!1}),me:()=>s("/auth/me",{method:"GET"}),hospitals:{list:()=>s("/hospitals",{method:"GET",auth:!1}),get:t=>s(`/hospitals/${t}`,{method:"GET",auth:!1})},departments:{list:t=>s(`/departments${t?`?${t.toString()}`:""}`,{method:"GET",auth:!1}),byHospital:t=>s(`/departments/hospital/${t}`,{method:"GET",auth:!1})},doctors:{list:t=>s(`/doctors${t?`?${t.toString()}`:""}`,{method:"GET",auth:!1}),byHospitalDepartment:(t,e)=>s(`/doctors/hospital/${t}/department/${e}`,{method:"GET",auth:!1}),get:t=>s(`/doctors/${t}`,{method:"GET",auth:!1})},insurance:{list:()=>s("/insurance",{method:"GET",auth:!1})},teleconsult:{consultationTypes:()=>s("/teleconsultation/consultation-types",{method:"GET",auth:!1}),insuranceOptions:()=>s("/teleconsultation/insurance-options",{method:"GET",auth:!1}),create:t=>s("/teleconsultation",{method:"POST",body:JSON.stringify(t)}),mine:()=>s("/teleconsultation/my-consultations",{method:"GET"}),get:t=>s(`/teleconsultation/${t}`,{method:"GET"}),doctor:t=>s(`/teleconsultation/doctor/${t}/consultations`,{method:"GET"})},appointments:{availableSlots:()=>s("/appointments/available-slots",{method:"GET",auth:!1}),create:t=>s("/appointments",{method:"POST",body:JSON.stringify(t)}),my:()=>s("/appointments/my-appointments",{method:"GET"}),myDoctor:()=>s("/appointments/my-doctor-appointments",{method:"GET"}),reassign:(t,e)=>s(`/appointments/${t}/reassign`,{method:"PATCH",body:JSON.stringify(e)}),cancel:t=>s(`/appointments/${t}/cancel`,{method:"PATCH"}),get:t=>s(`/appointments/${t}`,{method:"GET"})},payments:{checkout:t=>s("/payments/checkout",{method:"POST",body:JSON.stringify(t)}),verify:t=>s("/payments/verify",{method:"POST",body:JSON.stringify(t)})},meetings:{user:t=>s(`/meetings/user/${t}`,{method:"GET"}),get:t=>s(`/meetings/${t}`,{method:"GET"})},prescriptions:{create:t=>s("/prescriptions",{method:"POST",body:JSON.stringify(t)}),byPatient:t=>s(`/prescriptions/patient/${t}`,{method:"GET"}),myAuthored:()=>s("/prescriptions/doctor-authored",{method:"GET"})},ai:{symptomChecker:t=>s("/ai/symptom-checker",{method:"POST",body:JSON.stringify(t)}),bookAppointmentHelper:t=>s("/ai/book-appointment-helper",{method:"POST",body:JSON.stringify(t)}),prescriptionHelper:t=>s("/ai/prescription-helper",{method:"POST",body:JSON.stringify(t)}),referralSupport:t=>s("/ai/referral-support",{method:"POST",body:JSON.stringify(t)}),healthTips:t=>s("/ai/health-tips",{method:"POST",body:JSON.stringify(t)})},notifications:{list:()=>s("/notifications",{method:"GET"}),markRead:t=>s(`/notifications/${t}/read`,{method:"PUT"})},pharmacy:{list:()=>s("/pharmacies",{method:"GET",auth:!1}),near:(t,e,o)=>s(`/pharmacies/near?lat=${t}&lng=${e}${o?`&radius=${o}`:""}`,{method:"GET",auth:!1}),get:t=>s(`/pharmacies/${t}`,{method:"GET",auth:!1})},orders:{create:t=>s("/orders",{method:"POST",body:JSON.stringify(t)}),my:t=>s(`/orders/patients/${t}/orders`,{method:"GET"})},uploads:{image:async t=>{let e=a.Z.get("token"),o=new FormData;o.append("image",t);let s=await fetch(`${r}/upload/image`,{method:"POST",headers:e?{Authorization:`Bearer ${e}`}:void 0,body:o});if(!s.ok)throw Error("Upload failed");return s.json()}}}},4872:(t,e,o)=>{"use strict";o.r(e),o.d(e,{default:()=>a});let a=(0,o(8570).createProxy)(String.raw`/workspace/frontend/src/app/hospital/appointments/page.tsx#default`)},5495:(t,e,o)=>{"use strict";o.r(e),o.d(e,{default:()=>n,metadata:()=>s});var a=o(9510);o(5023);let r=(0,o(8570).createProxy)(String.raw`/workspace/frontend/src/app/providers.tsx#default`),s={title:"OneHealthline Connect",description:"Healthcare Anywhere. Anytime."};function n({children:t}){return a.jsx("html",{lang:"en",children:a.jsx("body",{className:"min-h-screen bg-slate-50",children:a.jsx(r,{children:t})})})}},5023:()=>{}};var e=require("../../../webpack-runtime.js");e.C(t);var o=t=>e(e.s=t),a=e.X(0,[224,838],()=>o(7133));module.exports=a})();