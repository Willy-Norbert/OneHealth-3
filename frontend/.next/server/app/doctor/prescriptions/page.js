(()=>{var t={};t.id=302,t.ids=[302],t.modules={2934:t=>{"use strict";t.exports=require("next/dist/client/components/action-async-storage.external.js")},4580:t=>{"use strict";t.exports=require("next/dist/client/components/request-async-storage.external.js")},5869:t=>{"use strict";t.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},399:t=>{"use strict";t.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},1116:(t,e,r)=>{"use strict";r.r(e),r.d(e,{GlobalError:()=>n.a,__next_app__:()=>p,originalPathname:()=>h,pages:()=>c,routeModule:()=>u,tree:()=>l}),r(3449),r(5495),r(5866);var o=r(3191),s=r(8716),i=r(7922),n=r.n(i),a=r(5231),d={};for(let t in a)0>["default","tree","pages","GlobalError","originalPathname","__next_app__","routeModule"].indexOf(t)&&(d[t]=()=>a[t]);r.d(e,d);let l=["",{children:["doctor",{children:["prescriptions",{children:["__PAGE__",{},{page:[()=>Promise.resolve().then(r.bind(r,3449)),"/workspace/frontend/src/app/doctor/prescriptions/page.tsx"]}]},{}]},{}]},{layout:[()=>Promise.resolve().then(r.bind(r,5495)),"/workspace/frontend/src/app/layout.tsx"],"not-found":[()=>Promise.resolve().then(r.t.bind(r,5866,23)),"next/dist/client/components/not-found-error"]}],c=["/workspace/frontend/src/app/doctor/prescriptions/page.tsx"],h="/doctor/prescriptions/page",p={require:r,loadChunk:()=>Promise.resolve()},u=new o.AppPageRouteModule({definition:{kind:s.x.APP_PAGE,page:"/doctor/prescriptions/page",pathname:"/doctor/prescriptions",bundlePath:"",filename:"",appPaths:[]},userland:{loaderTree:l}})},3021:(t,e,r)=>{Promise.resolve().then(r.t.bind(r,2994,23)),Promise.resolve().then(r.t.bind(r,6114,23)),Promise.resolve().then(r.t.bind(r,9727,23)),Promise.resolve().then(r.t.bind(r,9671,23)),Promise.resolve().then(r.t.bind(r,1868,23)),Promise.resolve().then(r.t.bind(r,4759,23))},5068:(t,e,r)=>{Promise.resolve().then(r.bind(r,2324))},1807:(t,e,r)=>{Promise.resolve().then(r.bind(r,2126))},2324:(t,e,r)=>{"use strict";r.r(e),r.d(e,{default:()=>n});var o=r(326),s=r(8838),i=r(8069);function n(){let{data:t}=(0,s.ZP)("myAuthoredRx",()=>i.hi.prescriptions.myAuthored());return(0,o.jsxs)("div",{className:"card p-6",children:[o.jsx("h1",{className:"text-xl font-semibold text-navy",children:"My Prescriptions"}),o.jsx("ul",{className:"mt-3 space-y-3",children:t?.data?.prescriptions?.map(t=>o.jsxs("li",{className:"rounded border p-3",children:[o.jsx("div",{className:"font-medium",children:t.diagnosis}),o.jsxs("div",{className:"text-sm text-slate-600",children:["Patient: ",t.patient?.name||t.patient]})]},t._id))})]})}},2126:(t,e,r)=>{"use strict";r.d(e,{default:()=>n});var o=r(326),s=r(4690),i=r(2471);function n({children:t}){return o.jsx(s.H,{children:o.jsx(i.N,{children:t})})}},4690:(t,e,r)=>{"use strict";r.d(e,{H:()=>l,a:()=>c});var o=r(326),s=r(7577),i=r(6562),n=r(8201),a=r(8069);let d=(0,s.createContext)(void 0);function l({children:t}){let[e,r]=(0,s.useState)(i.Z.get("token")||null),[l,c]=(0,s.useState)(null),h=(0,s.useCallback)(t=>{try{let e=(0,n.o)(t);return{id:e.id,role:e.role}}catch{return null}},[]),p=(0,s.useCallback)(async(t,e)=>{let o=await a.hi.login({email:t,password:e}),s=o.token||o.data?.token;if(!s)throw Error("No token returned from server");r(s),await m()},[]),u=(0,s.useCallback)(()=>{r(null),c(null),i.Z.remove("token")},[]),m=(0,s.useCallback)(async()=>{if(e)try{let t=await a.hi.me(),r=t?.data?.user||t?.user||t?.data;c(t=>({...t||h(e)||{id:"",role:"patient"},...r}))}catch{}},[e,h]),y=(0,s.useMemo)(()=>({user:l,token:e,isAuthenticated:!!e,login:p,logout:u,refreshProfile:m}),[l,e,p,u,m]);return o.jsx(d.Provider,{value:y,children:t})}function c(){let t=(0,s.useContext)(d);if(!t)throw Error("useAuth must be used within AuthProvider");return t}},2471:(t,e,r)=>{"use strict";r.d(e,{N:()=>a,z:()=>d});var o=r(326),s=r(7577),i=r(8069);let n=(0,s.createContext)(void 0);function a({children:t}){let[e,r]=(0,s.useState)([]),a=async()=>{try{let t=await i.hi.notifications.list();r(t?.data?.notifications||[])}catch{}};return o.jsx(n.Provider,{value:{notifications:e,refresh:a},children:t})}function d(){let t=(0,s.useContext)(n);if(!t)throw Error("useNotifications must be used within NotificationsProvider");return t}},8069:(t,e,r)=>{"use strict";r.d(e,{hi:()=>n});var o=r(6562);let s=process.env.NEXT_PUBLIC_API_URL||"http://localhost:5000/api";async function i(t,e={}){let r=o.Z.get("token"),i={"Content-Type":"application/json"};e.headers&&Object.assign(i,e.headers),!1!==e.auth&&r&&(i.Authorization=`Bearer ${r}`);let n=await fetch(`${s}${t}`,{...e,headers:i,cache:"no-store"});if(!n.ok)throw Error(await n.text()||`Request failed: ${n.status}`);try{return await n.json()}catch{return{}}}let n={register:t=>i("/auth/register",{method:"POST",body:JSON.stringify(t),auth:!1}),login:t=>i("/auth/login",{method:"POST",body:JSON.stringify(t),auth:!1}),verifyOtp:t=>i("/auth/verify-otp",{method:"POST",body:JSON.stringify(t),auth:!1}),resendOtp:t=>i("/auth/resend-otp",{method:"POST",body:JSON.stringify(t),auth:!1}),forgotPassword:t=>i("/auth/forgot-password",{method:"POST",body:JSON.stringify(t),auth:!1}),resetPassword:t=>i("/auth/reset-password",{method:"POST",body:JSON.stringify(t),auth:!1}),me:()=>i("/auth/me",{method:"GET"}),hospitals:{list:()=>i("/hospitals",{method:"GET",auth:!1}),get:t=>i(`/hospitals/${t}`,{method:"GET",auth:!1})},departments:{list:t=>i(`/departments${t?`?${t.toString()}`:""}`,{method:"GET",auth:!1}),byHospital:t=>i(`/departments/hospital/${t}`,{method:"GET",auth:!1})},doctors:{list:t=>i(`/doctors${t?`?${t.toString()}`:""}`,{method:"GET",auth:!1}),byHospitalDepartment:(t,e)=>i(`/doctors/hospital/${t}/department/${e}`,{method:"GET",auth:!1}),get:t=>i(`/doctors/${t}`,{method:"GET",auth:!1})},insurance:{list:()=>i("/insurance",{method:"GET",auth:!1})},teleconsult:{consultationTypes:()=>i("/teleconsultation/consultation-types",{method:"GET",auth:!1}),insuranceOptions:()=>i("/teleconsultation/insurance-options",{method:"GET",auth:!1}),create:t=>i("/teleconsultation",{method:"POST",body:JSON.stringify(t)}),mine:()=>i("/teleconsultation/my-consultations",{method:"GET"}),get:t=>i(`/teleconsultation/${t}`,{method:"GET"}),doctor:t=>i(`/teleconsultation/doctor/${t}/consultations`,{method:"GET"})},appointments:{availableSlots:()=>i("/appointments/available-slots",{method:"GET",auth:!1}),create:t=>i("/appointments",{method:"POST",body:JSON.stringify(t)}),my:()=>i("/appointments/my-appointments",{method:"GET"}),myDoctor:()=>i("/appointments/my-doctor-appointments",{method:"GET"}),reassign:(t,e)=>i(`/appointments/${t}/reassign`,{method:"PATCH",body:JSON.stringify(e)}),cancel:t=>i(`/appointments/${t}/cancel`,{method:"PATCH"}),get:t=>i(`/appointments/${t}`,{method:"GET"})},payments:{checkout:t=>i("/payments/checkout",{method:"POST",body:JSON.stringify(t)}),verify:t=>i("/payments/verify",{method:"POST",body:JSON.stringify(t)})},meetings:{user:t=>i(`/meetings/user/${t}`,{method:"GET"}),get:t=>i(`/meetings/${t}`,{method:"GET"})},prescriptions:{create:t=>i("/prescriptions",{method:"POST",body:JSON.stringify(t)}),byPatient:t=>i(`/prescriptions/patient/${t}`,{method:"GET"}),myAuthored:()=>i("/prescriptions/doctor-authored",{method:"GET"})},ai:{symptomChecker:t=>i("/ai/symptom-checker",{method:"POST",body:JSON.stringify(t)}),bookAppointmentHelper:t=>i("/ai/book-appointment-helper",{method:"POST",body:JSON.stringify(t)}),prescriptionHelper:t=>i("/ai/prescription-helper",{method:"POST",body:JSON.stringify(t)}),referralSupport:t=>i("/ai/referral-support",{method:"POST",body:JSON.stringify(t)}),healthTips:t=>i("/ai/health-tips",{method:"POST",body:JSON.stringify(t)})},notifications:{list:()=>i("/notifications",{method:"GET"}),markRead:t=>i(`/notifications/${t}/read`,{method:"PUT"})},pharmacy:{list:()=>i("/pharmacies",{method:"GET",auth:!1}),near:(t,e,r)=>i(`/pharmacies/near?lat=${t}&lng=${e}${r?`&radius=${r}`:""}`,{method:"GET",auth:!1}),get:t=>i(`/pharmacies/${t}`,{method:"GET",auth:!1})},orders:{create:t=>i("/orders",{method:"POST",body:JSON.stringify(t)}),my:t=>i(`/orders/patients/${t}/orders`,{method:"GET"})},uploads:{image:async t=>{let e=o.Z.get("token"),r=new FormData;r.append("image",t);let i=await fetch(`${s}/upload/image`,{method:"POST",headers:e?{Authorization:`Bearer ${e}`}:void 0,body:r});if(!i.ok)throw Error("Upload failed");return i.json()}}}},3449:(t,e,r)=>{"use strict";r.r(e),r.d(e,{default:()=>o});let o=(0,r(8570).createProxy)(String.raw`/workspace/frontend/src/app/doctor/prescriptions/page.tsx#default`)},5495:(t,e,r)=>{"use strict";r.r(e),r.d(e,{default:()=>n,metadata:()=>i});var o=r(9510);r(5023);let s=(0,r(8570).createProxy)(String.raw`/workspace/frontend/src/app/providers.tsx#default`),i={title:"OneHealthline Connect",description:"Healthcare Anywhere. Anytime."};function n({children:t}){return o.jsx("html",{lang:"en",children:o.jsx("body",{className:"min-h-screen bg-slate-50",children:o.jsx(s,{children:t})})})}},5023:()=>{}};var e=require("../../../webpack-runtime.js");e.C(t);var r=t=>e(e.s=t),o=e.X(0,[224,838],()=>r(1116));module.exports=o})();